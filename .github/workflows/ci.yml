name: CI

on:
  push:
    branches: ["**"]
    tags: ["v*.*.*"]
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Lint (ruff)
        run: ruff check app tests
      - name: Black check
        run: black --check app tests
      - name: Type-check (mypy)
        run: mypy app
      - name: Tests
        run: pytest --cov=app --cov-report=xml
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

# existing:
# jobs:
#   lint-test: ...

  docker-image:
    needs: lint-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}:main

  deploy:
    needs: docker-image
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: SSH into VPS and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script_stop: true
          script: |
            set -e
            cd /opt/run-planner

            # If your GHCR is private, login first
            if [ -n "${{ secrets.GHCR_TOKEN }}" ]; then
              docker login ghcr.io -u "${{ secrets.GHCR_USER }}" -p "${{ secrets.GHCR_TOKEN }}"
            fi

            # Pull latest image and (re)start
            docker compose pull
            docker compose up -d

            # Run DB migrations inside the running container
            docker compose exec -T web alembic upgrade head

            # Optional: bounce the app after migration
            docker compose restart web
 
